name: Deploy Frontend (Blue-Green)

on:
  push:
    branches:
      - main
jobs:
  deploy:
      runs-on: ubuntu-latest

      steps:
         # 1️⃣ 코드 가져오기
         - name: Checkout code
           uses: actions/checkout@v3

         # 2️⃣ 노드 모듈 캐시
         - name: Cache node_modules
           uses: actions/cache@v3
           with:
             path: node_modules
             key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
             restore-keys: |
               ${{ runner.os }}-node-

         # 3️⃣ 서버로 코드 업로드 (temp_upload 폴더)
         - name: Upload frontend project
           uses: appleboy/scp-action@master
           with:
             host: ${{ secrets.HOST }}
             username: ${{ secrets.USER }}
             key: ${{ secrets.SSH_KEY }}
             source: "./*"
             target: "~/PlayForYou/temp_upload"
             rm: true
             strip_components: 0
             exclude: ".git"

         # 4️⃣ 서버에서 Blue/Green 배포
         - name: SSH and deploy with Blue-Green strategy
           uses: appleboy/ssh-action@master
           with:
             host: ${{ secrets.HOST }}
             username: ${{ secrets.USER }}
             key: ${{ secrets.SSH_KEY }}
             script: |
               cd ~/PlayForYou
               
               # 현재 활성 버전 확인
               ACTIVE=$(cat active_version)
               
               if [ "$ACTIVE" = "blue" ]; then
                 TARGET="green"
                 PORT="3001"
               else
                 TARGET="blue"
                 PORT="3000"
               fi
               
               echo "Deploying to $TARGET on port $PORT"
               
               # 비활성 버전에 코드 덮어쓰기
               rm -rf frontend_$TARGET
               mv temp_upload frontend_$TARGET
               
               # .env.local 생성 (선택)
               cd frontend_$TARGET
               cat << 'EOF' > .env.local
               ${{ secrets.FRONT_ENV_PROD }}
               EOF
               
               # 새 컨테이너 빌드 & 실행
               docker-compose -f docker-compose.$TARGET.yml down || true
               PORT=$PORT docker-compose -f docker-compose.$TARGET.yml up -d --build
               
               # 헬스체크
               echo "Waiting for health check..."
               sleep 5
               curl -f http://localhost:$PORT || (echo "Health check failed" && exit 1)
               
               # Nginx conf 갱신 (템플릿 -> 실제 conf)
               sed "s/__FRONTEND_PORT__/$PORT/" nginx/p4you.conf.template > nginx/p4you.conf
               
               # Nginx 재시작
               sudo nginx -t && sudo systemctl reload nginx
               
               # 새 버전을 active로 기록
               echo "$TARGET" > active_version
               echo "✅ Blue-Green deployment successful!"
name: Deploy Frontend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      FRONTEND_PORT_BLUE: 3000
      FRONTEND_PORT_GREEN: 3001

    steps:
      # 1️⃣ 코드를 가져온다.
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ 커밋 메시지에서 배포 타겟 버전을 정한다.
      - name: Determine deploy version from commit message
        id: set_version
        run: |
          if [[ "${{ github.event.head_commit.message }}" =~ "deploy:green" ]]; then
            echo "version=green" >> $GITHUB_OUTPUT
          else
            echo "version=blue" >> $GITHUB_OUTPUT
          fi

      # 3️⃣ 선택된 버전에 따라 경로와 포트를 설정한다.
      - name: Set environment variables
        run: |
          if [ "${{ steps.set_version.outputs.version }}" = "blue" ]; then
            echo "TARGET_DIR=frontend_blue" >> $GITHUB_ENV
            echo "COMPOSE_FILE=docker-compose.blue.yml" >> $GITHUB_ENV
            echo "FRONTEND_PORT=${{ env.FRONTEND_PORT_BLUE }}" >> $GITHUB_ENV
          else
            echo "TARGET_DIR=frontend_green" >> $GITHUB_ENV
            echo "COMPOSE_FILE=docker-compose.green.yml" >> $GITHUB_ENV
            echo "FRONTEND_PORT=${{ env.FRONTEND_PORT_GREEN }}" >> $GITHUB_ENV
          fi

      # 4️⃣ 선택된 frontend 디렉토리만 서버로 업로드
      - name: Upload selected frontend
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "${{ env.TARGET_DIR }}/*"
          target: "~/PlayForYou/${{ env.TARGET_DIR }}"
          rm: true
          strip_components: 1
          exclude: ".git"

      # 5️⃣ nginx 템플릿과 설정도 함께 업로드
      - name: Upload nginx template & files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "nginx/*"
          target: "~/PlayForYou/nginx"
          rm: false
          strip_components: 1

      # 6️⃣ SSH 접속해서 컨테이너 재시작 + nginx conf 갱신 + 심볼릭 링크 연결 + 버전 기록
      - name: SSH deploy & update nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/PlayForYou/${TARGET_DIR}

            echo "[+] Docker Compose: ${COMPOSE_FILE} on port ${FRONTEND_PORT}"

            # 새 버전 컨테이너 재빌드
            docker-compose -f ${COMPOSE_FILE} down
            docker-compose -f ${COMPOSE_FILE} up -d --build

            # nginx conf 생성
            sed "s/__FRONTEND_PORT__/${FRONTEND_PORT}/g" ~/PlayForYou/nginx/p4you.conf.template > ~/PlayForYou/nginx/p4you.conf

            # active_version 파일에 현재 버전 기록
            echo "${TARGET_DIR}" > ~/PlayForYou/nginx/active_version

            # nginx sites-available에 복사
            sudo cp ~/PlayForYou/nginx/p4you.conf /etc/nginx/sites-available/p4you.conf

            # sites-enabled에 심볼릭 링크 연결 (기존 것도 덮어씀)
            sudo ln -sf /etc/nginx/sites-available/p4you.conf /etc/nginx/sites-enabled/p4you.conf

            # nginx 설정 검사 후 reload
            sudo nginx -t && sudo systemctl reload nginx
